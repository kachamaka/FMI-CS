public class MyThread extends Thread {
	Thread th;
	long numPoints;
	int numThread;
	long numPointsInCircle = 0;
	long sideSquare;
	long pointsOfThread;

	public MyThread(String aName, long side, long points, int thread,
			long pointsOfTh) {
		th = new Thread(aName);
		sideSquare = side;
		numPoints = points;
		numThread = thread;
		pointsOfThread = pointsOfTh;
	}

	public void run() {
		System.out.println(Thread.currentThread().getName() + " starting! " + pointsOfThread);
		for (long i = 0; i < pointsOfThread; i++) {
			System.out.println("lala");
			long x = randomNumber(0, sideSquare);
			long y = randomNumber(0, sideSquare);
			Point point = new Point(x, y);
			if (inCircle(sideSquare / 2, point))
				numPointsInCircle++;
		}
		System.out.println(Thread.currentThread().getName() + " "
				+ numPointsInCircle);
	}

	public static boolean inCircle(long radius, Point point) {
		long distance = (radius - point.getX()) * (radius - point.getX())
				+ (radius - point.getY()) * (radius - point.getY());
		if (distance > radius * radius)
			return false;
		else
			return true;
	}

	public static long randomNumber(long min, long max) {
		return Math.round((Math.random() * (max - min)) + min);
	}
}
